# Ultralytics ðŸš€ AGPL-3.0 License - https://ultralytics.com/license

# YOLO Continuous Integration (CI) GitHub Actions tests

name: Ultralytics CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      hub:
        description: "Run HUB"
        default: false
        type: boolean
      benchmarks:
        description: "Run Benchmarks"
        default: false
        type: boolean
      tests:
        description: "Run Tests"
        default: false
        type: boolean
      gpu:
        description: "Run GPU"
        default: false
        type: boolean
      raspberrypi:
        description: "Run Raspberry Pi"
        default: false
        type: boolean
      conda:
        description: "Run Conda"
        default: false
        type: boolean

jobs:
  Benchmarks:
    if: github.event_name != 'workflow_dispatch' || github.event.inputs.benchmarks == 'true'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # Temporarily disable windows-latest due to https://github.com/ultralytics/ultralytics/actions/runs/13020330819/job/36319338854?pr=18921
        os: [ubuntu-latest]
        python-version: ["3.11"]
        model: [yolo11n]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: astral-sh/setup-uv@v5
      - name: Install requirements
        shell: bash # for Windows compatibility
        run: |
          uv pip install --system -e ".[export]" "coverage[toml]" --extra-index-url https://download.pytorch.org/whl/cpu --index-strategy unsafe-best-match
      - name: Check environment
        run: |
          yolo checks
          uv pip list
      - name: Benchmark DetectionModel
        shell: bash
        run: coverage run -a --source=ultralytics -m ultralytics.cfg.__init__ benchmark model='path with spaces/${{ matrix.model }}.pt' imgsz=160 verbose=0.309
      - name: Benchmark ClassificationModel
        shell: bash
        run: coverage run -a --source=ultralytics -m ultralytics.cfg.__init__ benchmark model='path with spaces/${{ matrix.model }}-cls.pt' imgsz=160 verbose=0.249
      - name: Benchmark YOLOWorld DetectionModel
        shell: bash
        run: coverage run -a --source=ultralytics -m ultralytics.cfg.__init__ benchmark model='path with spaces/yolov8s-worldv2.pt' imgsz=160 verbose=0.337
      - name: Benchmark SegmentationModel
        shell: bash
        run: coverage run -a --source=ultralytics -m ultralytics.cfg.__init__ benchmark model='path with spaces/${{ matrix.model }}-seg.pt' imgsz=160 verbose=0.195
      - name: Benchmark PoseModel
        shell: bash
        run: coverage run -a --source=ultralytics -m ultralytics.cfg.__init__ benchmark model='path with spaces/${{ matrix.model }}-pose.pt' imgsz=160 verbose=0.197
      - name: Benchmark OBBModel
        shell: bash
        run: coverage run -a --source=ultralytics -m ultralytics.cfg.__init__ benchmark model='path with spaces/${{ matrix.model }}-obb.pt' imgsz=160 verbose=0.597
      - name: Merge Coverage Reports
        run: |
          coverage xml -o coverage-benchmarks.xml
      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report2
          path: coverage-benchmarks.xml

  Tests:
    if: github.event_name != 'workflow_dispatch' || github.event.inputs.tests == 'true'
    timeout-minutes: 360
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.11"]
        torch: [latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: astral-sh/setup-uv@v5
      - name: Install requirements
        shell: bash # for Windows compatibility
        run: |
          # CoreML must be installed before export due to protobuf error from AutoInstall
          slow=""
          torch=""
          if [ "${{ matrix.torch }}" == "1.8.0" ]; then
              torch="torch==1.8.0 torchvision==0.9.0"
          fi
          if [[ "${{ github.event_name }}" =~ ^(schedule|workflow_dispatch)$ ]]; then
              slow="pycocotools mlflow"
          fi
          uv pip install --system -e ".[export]" $torch $slow pytest-cov --extra-index-url https://download.pytorch.org/whl/cpu --index-strategy unsafe-best-match
      - name: Check environment
        run: |
          yolo checks
          uv pip list
      - name: Pytest tests
        shell: bash # for Windows compatibility
        run: |
          slow=""
          if [[ "${{ github.event_name }}" =~ ^(schedule|workflow_dispatch)$ ]]; then
              slow="--slow"
          fi
          pytest $slow --cov=ultralytics/ --cov-report xml tests/
      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: coverage.xml
